/* mobilecaddy-utils - v2.0.0 - Bundle Time: 2018-03-12 15:46:01 */
/* git info: "2018-03-08 11:35:36 +0000": 34e66b2d6ddf746b6814f8563e576e511cc89c8f (v2) */
/* Copyright 2018 MobileCaddy Ltd */

import*as mobileCaddy from"./constants";import*as smartStoreUtils from"./smartStoreUtils";import*as appDataUtils from"./appDataUtils";import*as connSessUtils from"./connSessUtils";import*as vsnUtils from"./vsnUtils";import*as logger from"./logger";import*as geoLocation from"./geoLocation";import*as _ from"underscore";var smartstore=cordova.require("com.salesforce.plugin.smartstore");const LOCAL_DEV=!!window.LOCAL_DEV,USE_FORCETK=!!window.USE_FORCETK;var CSINHEAD_SYNC_VSN="006";function handleRefreshResponse(e){return new Promise(function(n,o){var t=function(e){o(e)},s={};console.log("json object date time = "+e.lastRefreshDatetime);var r={},a={},c=e.mt;null===c&&console.error("Mobile Table (tag 'mt') empty in p2mRefresh response: ",e);var i=smartstore.buildExactQuerySpec("Mobile_Table_Name",c,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",i,function(o){o.forEach(function(e){if("Insert"==e.CRUD_Operation||"InsertUpdate"==e.CRUD_Operation)r[e.Id]=1;else{if("Update"!=e.CRUD_Operation&&"UpdateUpdate"!=e.CRUD_Operation)return void logger.error("RTS contains record with non support CRUD Operation"+e);a[e.Id]=1}}),smartStoreUtils.getProxyFieldName(c).then(function(i){var u=[],l=[];(e.records.forEach(function(e){var n=!0;null!==e.recordData.MC_Proxy_ID__c&&r.hasOwnProperty(e.recordData[i])&&(n=!1),n&&a.hasOwnProperty(e.recordData.Id)&&(n=!1),n&&u.push(e.recordData)}),e.ds)&&e.ds.oq.concat(e.ds.sd.concat(e.ds.hd.concat(e.ds.sh))).forEach(function(e){a.hasOwnProperty(e)?console.log("We have a dirty local version, not deleting"):l.push({Id:e})});var d=smartstore.buildExactQuerySpec("Mobile_Table_Name",c,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",d,function(r){r.length==o.length?smartStoreUtils.deleteRecordsForExternalId(c,l,"Id",function(){smartstore.upsertSoupEntriesWithExternalId(c,u,"Id",function(){smartstore.soupExists("SnapShot_"+c,function(o){o?smartStoreUtils.deleteRecordsForExternalId("SnapShot_"+c,l,"Id",function(){smartstore.upsertSoupEntriesWithExternalId("SnapShot_"+c,u,"Id",function(){vsnUtils.checkForMigrateToInfo(e),setPlatAuthUrl(e.platAuthUrl),s.status=0,s.cs=e.cs,s.cp=e.cp,s.lastRefreshDatetime=e.lastRefreshDatetime,n(s)},t)},t):(vsnUtils.checkForMigrateToInfo(e),setPlatAuthUrl(e.platAuthUrl),s.status=0,s.lastRefreshDatetime=e.lastRefreshDatetime,s.cs=e.cs,s.cp=e.cp,n(s))},t)},t)},t):(s.status=0,s.mc_add_status=1,s.cs=e.cs,s.cp=e.cp,s.lastRefreshDatetime=e.lastRefreshDatetime,resolves(s))},t)})},t)})}function setPlatAuthUrl(e){console.log("setPlatAuthUrl",e),e||(e=""),appDataUtils.updateCurrentValueInAppSoup("platAuthUrl",e).catch(function(n){logger.error("setPlatAuthUrl",e,n)})}var P2M_REFRESH_OK=100500,SYNC_NOK=100402;function p2mRefreshTable(e,n,o,t,s,r,a,c){console.log("Refreshing table",e);var i,u,l,d,f=function(t,s){if(console.debug("respJson",t),console.debug("event",s),s.status){var r,i,l=new RegExp("\n","g");t=t.replace(l,"\\n"),l=new RegExp("\r","g"),t=t.replace(l,""),i=JSON.parse(t),console.log("Parse json done"),handleRefreshResponse(i).then(function(n){return r=n,console.log("handle refresh res = "+r.status),smartStoreUtils.setTableDefnColumnValue(e,"Last Refresh Date/Time",r.lastRefreshDatetime)}).then(function(){var n="P2M RE Records Processed";return"Connection_Session__mc"==e&&(n="P2M Conn_Sess Records Processed"),1==r.mc_add_status&&(n="P2M RE Abandoned"),d.connSessionRec.mobilecaddy1__Mobile_Process_Status__c=n,d.connSessionRec.Id=r.cs,connSessUtils.postProcessConnectionSession(d.connSessionRec)}).then(function(){return connSessUtils.handleUpdatedCS(i.csM2P)}).then(function(){console.log("success return from post process"),o&&u<CSINHEAD_SYNC_VSN?connSessUtils.maybeSyncConnSess(d.connSessionRec,function(){console.log("success return from maybeSyncConnSess"),i["Session Number"]&&i["Session Number"]<i["Total Sessions"]?(console.info("Page "+i["Session Number"]+" of "+i["Total Sessions"]+", going again."),p2mRefreshTable(e,n,o,i["Session Number"]+1,i["Total Sessions"],i.CsPId,a,c)):i.moreBatches?(console.info("moreBatches"),p2mRefreshTable(e,n,o,"newBatch",1,null,a,c)):(p.status=P2M_REFRESH_OK,a(p))},c):i["Session Number"]&&i["Session Number"]<i["Total Sessions"]?(console.info("Page "+i["Session Number"]+" of "+i["Total Sessions"]+", going again."),p2mRefreshTable(e,n,o,i["Session Number"]+1,i["Total Sessions"],i.CsPId,a,c)):i.moreBatches?(console.info("moreBatches"),p2mRefreshTable(e,n,o,"newBatch",1,null,a,c)):(console.log("No more pages or batches"),p.status=P2M_REFRESH_OK,a(p))}).catch(function(e){c(e)})}else"exception"===s.type&&logger.error("p2mRefresh",e,s.message,s.where),connSessUtils.cleanConnectionSessionVFEvent(s,d,function(e){p.status=SYNC_NOK,p.mc_add_status=e.mc_add_status,a(p)},c)},p={},S="newBatch"==t;S&&(t=1);try{smartStoreUtils.getTableDefnColumnValue(e,"Last Refresh Date/Time").then(function(e){(l=e)&&"null"!=l||(l=0),console.log("Using lastRefreshDatetime = "+l),console.debug("maxTableAge",n);var o=new Date;if(l<o-n||t>1||S)return appDataUtils.getCachedCurrentValueFromAppSoup("audId");console.log("Not refreshing table. it is too young"),p.status=100402,p.status=100497,a(p)}).then(function(e){return i=e,appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion")}).then(function(e){return buildConnectionSession(u=e,"Sync - Refresh","P2M RE Process Called",t,s,r)}).then(function(e){if(d=e,!o){var n=JSON.parse(d.connSessJson);n.initialSync=!0,d.connSessJson=JSON.stringify(n)}if(S){var t=JSON.parse(d.connSessJson);t.firstBatch=!1,d.connSessJson=JSON.stringify(t)}return getCsUpdates(u,o)}).then(function(n){console.log("csUpdates",n),n&&(d.connSessJson=JSON.parse(d.connSessJson),d.connSessJson.csM2P=n,d.connSessJson=JSON.stringify(d.connSessJson)),console.log("connSessObject -> ",d),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/p2mRefreshTable001",contentType:"application/json",data:{audId:i,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:u,mobileTableName:e,deviceRefreshIds:[],lastRefreshDateTime:l,thirdPartyJson:"",connSessJson:d.connSessJson}},function(e,n){void 0===n&&((n={}).status="200"),f(e,n)},c):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".p2mRefreshTable",i,u,e,[],l,"",d.connSessJson,f,{buffer:!1,escape:!1,timeout:12e4})}).catch(function(e){logger.error(e),c(e)})}catch(e){logger.errorAndDispatch(e)}}function genProxyId(e,n,o){return new Promise(function(t,s){appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(s){t("PROXY%"+e+"%"+o+"%"+n+"%"+s)}).catch(function(e){s(e)})})}function addProxyIds(e,n,o,t,s){var r;smartStoreUtils.getProxyFieldName(e).then(function(e){return r=e,appDataUtils.getCachedCurrentValueFromAppSoup("audId")}).then(function(a){n.forEach(function(n){var t="PROXY%"+e+"%"+o+"%"+n._soupEntryId+"%"+a;n.Id=t,n[r]=t}),smartstore.upsertSoupEntries(e,n,function(e){t(e)},s)}).catch(function(e){s(e)})}function nullHandler(e,n,o,t){var s;if("Throw Exception"==t)throw logger.errorAndDispatch("nullHandler - NULL value found",e,n,o.Id),"NULL value found for field "+n+" in Mobile Table "+e+" with Id = "+o.Id;return"Return NULL"==t?s=null:"Return Empty String"==t&&(s=""),s}function getCsUpdates(e,n){return new Promise(function(o,t){if(console.log("syncRefreshVersion",e,CSINHEAD_SYNC_VSN),e<CSINHEAD_SYNC_VSN||!n)o();else{var s,r=[];smartStoreUtils.queryMobileTable("recsToSync","Mobile_Table_Name","Connection_Session__mc").then(function(e){return s=e,console.log("rtsRecs",s),s.length>0?smartStoreUtils.querySoupRecsPromise("Connection_Session__mc"):Promise.resolve([])}).then(function(e){console.log("csRecs",e),s.forEach(function(n){for(var o,t=0;t<e.length;++t)if(e[t].Id===n.Id){o=e[t];break}o&&r.push({Id:n.Id,t:valFromCsSessionType(o.mobilecaddy1__Session_Type__c),s:valFromCsStatus(o.mobilecaddy1__Mobile_Process_Status__c)})}),o(r)}).catch(function(e){logger.error(e),o(null)})}})}function valFromCsStatus(e){switch(e){case"P2M RE Records Processed":return 1;case"P2M Conn_Sess Records Processed":return 2;case"P2M RE Abandoned":return 3;case"P2M RE Exception/Timeout":return 4;case"P2M RE Heartbeat Exception/Timeout":return 5;case"P2M RE Failure":return 6;case"P2M RE Hearbeat Failure":return 7;case"M2P Conn_Sess Records Processed":return 8;case"M2P Records Processed":return 9;case"M2P UP Failed - RTS Cleared":return 10;case"M2P SC - Status Check Processed":return 11;case"M2P SC Failure":return 12;case"M2P SC Exception/Timeout":return 13;case"M2P SC Heartbeat Exception/Timeout":return 14;case"M2P SC Heartbeat Failure":return 15;case"M2P UP Received - Records Processed":return 16;default:return logger.error("Unkown CS status",e),0}}function valFromCsSessionType(e){switch(e){case"Sync - Refresh":return 1;case"Sync - Update":return 2;case"Status Check":return 3;default:return logger.error("Unkown Session_Type__c",e),0}}function createUpdateJson(e,n,o,t,s,r,a,c,i,u,l){var d={MobileTable:e,connSessProxyId:u,records:[]};a.forEach(function(a){for(var u,l=0;l<c.length;++l)if(c[l].Id===a.Id){u=c[l];break}if(u){var f={RTSRowNum:a._soupEntryId,RecordCRUD:mapCrudOpforM2P(a.CRUD_Operation),fields:[]};switch(f.RecordCRUD){case"I":case"T":f=createM2PInsertRecObj(f,e,n,o,t,s,r,u),d.records.push(f);break;case"D":case"U":case"Q":for(var p,S=0;S<i.length;++S)if(i[S].Id===a.Id){p=i[S];break}p?(f=createM2PUpdateRecObj(f,e,n,o,t,s,r,u,p),d.records.push(f)):logger.errorAndDispatch("createUpdateJson Missing snapShot",e,u.Id);break;default:logger.errorAndDispatch("createUpdateJson unknown CRUD",e,a.Id,a.CRUD_Operation)}}else logger.errorAndDispatch("createUpdateJson Missing primary",e,a.Id)}),l(JSON.stringify(d))}function mapCrudOpforM2P(e){switch(e){case"Insert":return"I";case"InsertDelete":return"T";case"Update":return"U";case"UpdatetDelete":return"Q";case"Delete":return"D";default:return null}}function createM2PInsertRecObj(e,n,o,t,s,r,a,c){for(var i in c){var u={name:i};if("mobilecaddy1__Error_Text__c"==i)u.value=JSON.stringify(c[i]),e.fields.push(u);else if("_soupEntryId"!=i&&"_soupLastModifiedDate"!=i){var l,d={};d[t]=i;var f=_.findWhere(o,d);if(null===c[i])fieldNullHandler=f[r],l=nullHandler(n,i,c,fieldNullHandler);else if(l=c[i],f)"M2P UP Unquoted"!=f[a]||"true"!=l&&"false"!=l||(l="true"==l);u.value=l,e.fields.push(u)}}return e}function createM2PUpdateRecObj(e,n,o,t,s,r,a,c,i){var u=!1;for(var l in c)if("_soupEntryId"!=l&&"_soupLastModifiedDate"!=l){var d={name:l};if(c[l]!=i[l]||"SystemModstamp"==l){var f,p;u=!0;var S={};S[t]=l;var m=_.findWhere(o,S);if(null===c[l])fieldNullHandler=m[r],f=nullHandler(n,l,c,fieldNullHandler),p=nullHandler(n,l,i,fieldNullHandler);else if(f=c[l],p=i[l],m){var g=m[a];"M2P UP Unquoted"!=g||"true"!=f&&"false"!=f||(f="true"==f),"M2P UP Unquoted"!=g||"true"!=p&&"false"!=p||(p="true"==p)}d.previousValue=p,d.value=f,e.fields.push(d)}}return u?(e.fields.push({name:"Id",previousValue:i.Id,value:i.Id}),e):[]}function markRecsToSyncWithProxy(e,n,o,t){e.forEach(function(e){e.Current_Connection_Session=n}),smartstore.upsertSoupEntriesWithExternalId("recsToSync",e,"Id",o,t)}function createInsertSnapshotRecords(e,n,o,t,s){var r=[];n.forEach(function(e){var n={};o.forEach(function(o){if(e.Id==o.Id&&"Insert"==e.CRUD_Operation)for(var t in o)"_soupEntryId"!=t&&"_soupLastModifiedDate"!=t&&(n[t]=o[t])}),_.isEmpty(n)||r.push(n)}),0===r.length?t():smartStoreUtils.getProxyFieldName(e).then(function(n){smartstore.upsertSoupEntriesWithExternalId("SnapShot_"+e,r,n,t,s)})}function buildConnectionSession(e,n,o,t,s,r){return new Promise(function(e,a){var c={};geoLocation.getLocation(function(i){var u={mobilecaddy1__Session_Type__c:n,mobilecaddy1__Mobile_Process_Status__c:o,SystemModstamp:(new Date).getTime()},l=i.ErrorNumber;0!==l?u.mobilecaddy1__Session_Created_Location_Error__c=i.Error:(u.Session_Created_Location__Longitude__s=i.Latitude,u.Session_Created_Location__Latitude__s=i.Longitude),insertRecWithProxyId("Connection_Session__mc",u,function(n){var o=new Date,a={"Sync Session Proxy ID":null,"Total Sessions":s,"Session Number":t,"Device Call Date/Time":o.getTime(),"Connection Session Proxy ID":n.proxyId};r&&(a.CsPId=r),0!==l?a.ErrorNumber=l:(a["Location Long"]=i.Longitude,a["Location Lat"]=i.Latitude),c.status=0,c.connSessionRec=n.insertedRecord,c.connSessProxyId=n.proxyId;var u={version:"NULL"};window.device&&(u=window.device),appDataUtils.getCurrentValueFromAppSoup("containerVersion").then(function(n){a.containerVsn=n,a.OSVsn=u.version,c.connSessJson=JSON.stringify(a),e(c)}).catch(function(n){logger.error("buildConnectionSession - Could not get containerVsn",n),a.OSVsn=u.version,c.connSessJson=JSON.stringify(a),e(c)})},function(e){a(e)})},function(e){a(e)})})}function m2pRecoveryUpdateMobileTable(e){return new Promise(function(n,o){var t={},s=function(e){n(e)},r=function(e){o(e)},a=smartstore.buildExactQuerySpec("Mobile_Table_Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",a,function(n){if(0!==n.length){console.debug("recsToSyncRecords",JSON.stringify(n));var o=!1;"Connection_Session__mc"!=e&&n.length>3e4&&(o=!0),console.log("moreToSync: "+o);var a=[];a=o?(a=_.sortBy(n,"_soupLastModifiedDate")).slice(0,3e4):n,console.debug("recsToSyncRecords2",JSON.stringify(a)),smartStoreUtils.querySoupRecords(e,function(n){smartStoreUtils.querySoupRecords("SnapShot_"+e,function(c){smartStoreUtils.getSysDataRowMapColHeadings("Row Mapping TC",["Parent SOUP Name","Table Column Name","M2P Update Converter DEVICE","M2P Update NULL Handler DEVICE","M2P Update Formatter DEVICE"],function(i){var u=i[0],l=i[1],d=i[2],f=i[3],p=i[4];smartStoreUtils.queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Column",u,e,function(i){var u=[];if(_.each(a,function(e){var o;o=e.Id,_.find(n,function(e){return e.Id==o})&&u.push(e)}),_.isEmpty(u))return console.debug("Nothing in checkedRecsToSync."),void smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){t.status=M2P_UPDATE_OK,t.mc_add_status=M2P_NO_RECS_TO_SYNC,s(t)}).catch(function(e){logger.error(e)});createUpdateJson(e,i,l,d,f,p,u,n,c,"",function(c){var i;appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(e){return i=e,appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion")}).then(function(u){createInsertSnapshotRecords(e,a,n,function(){console.log("moreToSync: "+o);var n=function(e,n){console.debug("result: "+e),console.debug("event: "+n),t.result=e,t.event=n,s(t)};c=c.replace(/: undefined/g,': "undefined"'),console.debug("jsonString -> "+c),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/m2pUpdateTable001",contentType:"application/json",data:{audId:i,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:u,mobileTableName:e,jsonRecords:c}},function(e,o){void 0===o&&((o={}).status="200"),n(e,o)},r):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".m2pUpdateTable",i,u,e,c,JSON.stringify({"Session Number":1,"Location Long":10,"Location Lat":10,"Total Sessions":1,"Device Call Date/Time":(new Date).getTime(),"Connection Session Proxy ID":"1",ErrorNumber:2}),n,{buffer:!1,escape:!1,timeout:3e4})},r)}).catch(function(e){r(e)})},r)},r)},r)},r)},r)}else smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){t.status=M2P_UPDATE_OK,t.mc_add_status=M2P_NO_RECS_TO_SYNC,s(t)}).catch(function(e){logger.log("No recs to sync")})},r)})}var M2P_UPDATE_OK=100300,M2P_NO_RECS_TO_SYNC=100310;function m2pUpdateMobileTable(e,n,o,t){var s,r,a={};console.debug("In m2pUpdateMobileTable call",e,n);try{appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion").then(function(e){return buildConnectionSession(r=e,"Sync - Update","M2P Process Called",1,1,null)}).then(function(e){return s=e,console.log("proxy id = "+s.connSessProxyId),getCsUpdates(r,!0)}).then(function(c){console.log("m2p csUpdates",c),c&&(s.connSessJson=JSON.parse(s.connSessJson),s.connSessJson.csM2P=c,s.connSessJson=JSON.stringify(s.connSessJson)),console.log("connSessObject -> ",s);var i=smartstore.buildExactQuerySpec("Mobile_Table_Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",i,function(c){if(0!==c.length){console.debug("recsToSyncRecords",JSON.stringify(c));var i=!1;"Connection_Session__mc"!=e&&c.length>n&&(i=!0),console.log("moreToSync",i);var u=[];u=i?(u=_.sortBy(c,"_soupLastModifiedDate")).slice(0,n):c,console.debug("recsToSyncRecords2",JSON.stringify(u)),markRecsToSyncWithProxy(u,s.connSessProxyId,function(n){smartStoreUtils.querySoupRecords(e,function(c){smartStoreUtils.querySoupRecords("SnapShot_"+e,function(u){smartStoreUtils.getSysDataRowMapColHeadings("Row Mapping TC",["Parent SOUP Name","Table Column Name","M2P Update Converter DEVICE","M2P Update NULL Handler DEVICE","M2P Update Formatter DEVICE"],function(l){var d=l[0],f=l[1],p=l[2],S=l[3],_=l[4];smartStoreUtils.queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Column",d,e,function(l){createUpdateJson(e,l,f,p,S,_,n,c,u,s.connSessProxyId,function(u){var l;appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(d){l=d,createInsertSnapshotRecords(e,n,c,function(){console.log("moreToSync",i);var n=function(n,c){var l;(console.debug("result",n),console.debug("event",c),c.status)?(n=n.replace(/,}/g,"}"),console.log("Parse json processM2PUpdateResponse"),l=JSON.parse(n),console.log("Parse json processM2PUpdateResponse done"),connSessUtils.processM2PUpdateResponse(l,u,function(n){console.debug("responseObject",JSON.stringify(n)),s.connSessionRec.mobilecaddy1__Mobile_Process_Status__c="Connection_Session__mc"==e?"M2P Conn_Sess Records Processed":"M2P Records Processed",s.connSessionRec.Id=n.csId,connSessUtils.postProcessConnectionSession(s.connSessionRec).then(function(){return connSessUtils.handleUpdatedCS(l.csM2P)}).then(function(){console.log("success return from post process"),console.log("success return from post process"),console.log("moreToSync",i),i?(a.status=M2P_UPDATE_OK,a.mc_add_status="more-to-sync",o(a)):r<CSINHEAD_SYNC_VSN?connSessUtils.maybeSyncConnSess(s.connSessionRec,function(){console.log("success return from maybeSyncConnSess"),a.status=M2P_UPDATE_OK,o(a)},t):(a.status=M2P_UPDATE_OK,o(a))}).catch(function(e){t(e)})},t)):"exception"===c.type?(a.status=M2P_UPDATE_OK,a.mc_add_status=HEARTBEAT_EXCEPTION,o(a),logger.error("m2pUpdate",e,c.message,c.where)):(a.status=M2P_UPDATE_OK,a.mc_add_status=HEARTBEAT_FAILURE,o(a),logger.error("m2pUpdate",e,c.message,c.where))};u=u.replace(/: undefined/g,': "undefined"'),console.debug("jsonString -> "+u),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/m2pUpdateTable001",contentType:"application/json",data:{audId:l,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:r,mobileTableName:e,jsonRecords:u,connSessJson:s.connSessJson}},function(e,o){void 0===o&&((o={}).status="200"),n(e,o)},t):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".m2pUpdateTable",l,r,e,u,s.connSessJson,n,{buffer:!1,escape:!1,timeout:3e4})},t)}).catch(function(e){t(e)})},t)},t)},t)},t)},t)},t)}else smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){a.status=M2P_UPDATE_OK,a.mc_add_status=M2P_NO_RECS_TO_SYNC,o(a)}).catch(function(e){t(e)})},t)},t)}catch(e){logger.errorAndDispatch(e)}}function insertRecWithProxyId(e,n,o,t){var s={},r=new Date;smartStoreUtils.getProxyFieldName(e).then(function(a){smartstore.upsertSoupEntries(e,[n],function(n){var c=n[0];genProxyId(e,c._soupEntryId,r.getTime()).then(function(n){c.Id=n,c[a]=n,smartstore.upsertSoupEntries(e,[c],function(e){s.status=0,s.proxyId=n,s.insertedRecord=e[0],o(s)},t)}).catch(function(e){t(e)})},t)}).catch(function(e){t(e)})}var HEARTBEAT_OK=100100,HEARTBEAT_EXCEPTION=100101,HEARTBEAT_FAILURE=100102,HEARTBEAT_NO_CONNECTION=100103,HEARTBEAT_NOT_DEVICE=100104,HEARTBEAT_REFRESHED_OK=100105;function heartBeat(e,n){var o={},t=navigator.appVersion.includes("Electron");if(t||navigator&&navigator.connection&&"undefined"!=typeof Connection)if(console.log("Connection details"),t||navigator.connection.type!=Connection.NONE)if("undefined"==typeof Visualforce){logger.log("Visualforce not currently defined");var s=window.location.pathname;$j.get(s).done(function(t){logger.log("Startpage re-fetched",s);var r=new RegExp('"(\\S+VFRemote.js)"').exec(t);if(r[0]){var a=r[1];$j.getScript(a).done(function(){logger.log("remote script fetched",a),new Function($j("script")[2].innerHTML)(),logger.log("set up Visualforce ref"),sendHeartBeat(e,n)}).fail(function(n,t,s){logger.errorAndDispatch("vfRemote Load Error",r[0],s),o.status=HEARTBEAT_FAILURE,e(o)})}else logger.errorAndDispatch("heartBeat Could not find VFRemote src",s),o.status=HEARTBEAT_FAILURE,e(o)}).fail(function(n,t,r){logger.errorAndDispatch("Startpage Load Error",s,r),o.status=HEARTBEAT_FAILURE,e(o)})}else sendHeartBeat(e,n);else o.status=HEARTBEAT_NO_CONNECTION,e(o);else localStorage.connection?o.status=localStorage.connection:o.status=HEARTBEAT_NOT_DEVICE,e(o)}function sendHeartBeat(e,n){var o={};Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".heartBeat",function(n,t){t.status?(o.status=HEARTBEAT_OK,e(o)):"exception"===t.type?refreshToken(function(n){console.log("refresh token refreshed in heartbeat"),o.status=HEARTBEAT_REFRESHED_OK,e(o)},function(n){o.status=HEARTBEAT_EXCEPTION,e(o)}):(console.debug("other"),o.status=HEARTBEAT_FAILURE,e(o))},{escape:!1,timeout:3e4})}function refreshToken(e,n){smartStoreUtils.querySoupRecords("appSoup",function(o){var t={};o.forEach(function(e){t[e.Name]=e.CurrentValue}),refreshTokenRequest(t,e,n)},function(e){n(e)})}function refreshTokenRequest(e,n,o){var t="grant_type=refresh_token&identity_url="+e.identityUrl+"&client_id="+e.clientId+"&refresh_token="+e.refreshToken+"&orgId="+e.orgId+"&audId="+e.audId+"&userId="+e.userId;console.log("data: "+t),$j.ajax({type:"POST",url:"https://mobilecaddy.secure.force.com/apex/ProxyToken",cache:!1,processData:!1,data:t,success:function(e){console.log("Changing vf access token from "+Visualforce.remoting.oauthAccessToken+" to "+e.access_token),Visualforce.remoting.oauthAccessToken=e.access_token,Visualforce.remoting.last.refresh(function(){appDataUtils.updateCurrentValueInAppSoup("accessToken",e.access_token).then(function(){console.log("Updated accessToken in appSoup"),n(e.access_token)}).catch(function(e){o(e)})},function(e){logger.error("in VF last refresh error"),o(e)})},error:function(e){logger.error("failed to refresh access token "+JSON.stringify(e)),o(e)},dataType:"json",beforeSend:function(e){}})}function _handleRefreshResponse(e){return new Promise(function(n,o){handleRefreshResponse(e,function(){n()},function(e){o(e)})})}export{CSINHEAD_SYNC_VSN,refreshToken,genProxyId,addProxyIds,P2M_REFRESH_OK,p2mRefreshTable,buildConnectionSession,M2P_UPDATE_OK,M2P_NO_RECS_TO_SYNC,m2pUpdateMobileTable,m2pRecoveryUpdateMobileTable,HEARTBEAT_OK,HEARTBEAT_EXCEPTION,HEARTBEAT_FAILURE,HEARTBEAT_NO_CONNECTION,HEARTBEAT_NOT_DEVICE,HEARTBEAT_REFRESHED_OK,heartBeat,_handleRefreshResponse,createUpdateJson};