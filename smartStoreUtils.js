/* mobilecaddy-utils - v2.0.0 - Bundle Time: 2018-03-12 15:46:01 */
/* git info: "2018-03-08 11:35:36 +0000": 34e66b2d6ddf746b6814f8563e576e511cc89c8f (v2) */
/* Copyright 2018 MobileCaddy Ltd */

import*as mobileCaddy from"./constants";import*as appDataUtils from"./appDataUtils";var smartstore=cordova.require("com.salesforce.plugin.smartstore");function deleteRecordsForExternalId(e,o,n,t,r){if(!t&&!r)return new Promise(function(t,r){if(0===o.length)t();else{var i="";"object"==typeof o[0]?o.forEach(function(e,o){i+=0===o?"'"+e[n]+"'":",'"+e[n]+"'"}):o.forEach(function(e,o){i+=0===o?"'"+e+"'":", '"+e+"'"});var a="SELECT * FROM {"+e+"} WHERE {"+e+":"+n+"} IN ("+i+")";console.log("deleteRecordsForExternalId soql",a),querySpec=smartstore.buildSmartQuerySpec(a),smartQuerySoupRecordsWithQuerySpec(querySpec,function(o){console.log("recs",o);var n=o.map(function(e){return e[0]});smartstore.removeFromSoup(e,n,function(e){t(e)},function(e){r(e)})},function(e){r(e)})}});if(0===o.length)t();else{var i=[];o.forEach(function(e){i.push(e[n])}),querySoupRecords(e,function(o){var a=[];o.forEach(function(e){-1!=i.indexOf(e[n])&&a.push(e._soupEntryId)}),0===a.length?t():smartstore.removeFromSoup(e,a,t,r)},r)}}function collectRecsFromCursor(e,o,n){var t=[];function r(e){o(t)}function i(e){if(console.error("onCursorClosedError",e),console.error("onCursorClosedError",e.stack),!n)throw e;n(e)}!function e(o){o.currentPageOrderedEntries.forEach(function(e){t.push(e)}),o.currentPageIndex<o.totalPages-1?cordova.require("com.salesforce.plugin.smartstore").moveCursorToNextPage(o,e):cordova.require("com.salesforce.plugin.smartstore").closeCursor(o,r,i)}(e)}function getSoupDefinitionRows(e,o,n){querySoupRecordsWithQuerySpec("syncLib_system_data",smartstore.buildExactQuerySpec("Name",e,mobileCaddy.QUERY_BUFFER_SIZE),function(e){console.log("soup definition rows success callback with rec count = "+e.length);var n=[];e.forEach(function(e){console.log("processing record = "),e.Type!=mobileCaddy.STANDING_DATA_OBJECT&&e.Type!=mobileCaddy.DYNAMIC_DATA_OBJECT?(console.log("Record Match"),n.push(e)):console.log("Record does not match")}),o(n)},n)}function getSoupObjectDefinition(e,o,n){querySoupRecordsWithQuerySpec("syncLib_system_data",cordova.require("com.salesforce.plugin.smartstore").buildExactQuerySpec("Name",e,mobileCaddy.QUERY_BUFFER_SIZE),function(e){for(var n,t=0;t<e.length;t++)if(e[t].Type==mobileCaddy.STANDING_DATA_OBJECT||e[t].Type==mobileCaddy.DYNAMIC_DATA_OBJECT){n=e[t];break}o(n)},n)}function removeSoupDefinitions(e,o,n){querySoupRecordsWithQuerySpec("syncLib_system_data",cordova.require("com.salesforce.plugin.smartstore").buildExactQuerySpec("Name",e,mobileCaddy.QUERY_BUFFER_SIZE),function(e){deleteRecordsFromSoup(e,"syncLib_system_data",function(){console.log("Success delete records from soup, calling callback"),o()},n)},n)}function buildSoupQueryString(e,o,n){console.log("in buildSoupQueryString for soup = "+e),getSoupDefinitionRows(e,function(t){console.log("In getSoupDefinitionRows success callback"),0===t.length?(simpleMessageSL("No soup columns defined for soup "+e),n("No soup columns defined for soup "+e)):getSoupObjectDefinition(e,function(n){console.log("in getSoupObjectDefinition success callback");var r="Select ";t.forEach(function(e){r+=e.Column_Name+","}),r=r.substring(0,r.length-1),o(r+=" From "+e)},n)},n)}function getQueryAndSoupDefinition(e,o,n){console.log("in getQueryAndSoupDefinition");var t=[],r="Select ";e.forEach(function(e){console.log("soup column defn = "),t.push({path:e.Column_Name,type:e.Column_Type}),0!==e.Column_Name.indexOf("_")&&(r+=e.Column_Name+",")}),r=r.substring(0,r.length-1),o(r+=" From "+e[0].Name,t)}function querySoupRecords(e,o,n){var t=smartstore.buildAllQuerySpec("_soupEntryId",null,mobileCaddy.QUERY_BUFFER_SIZE);smartstore.querySoup(e,t,function(e){collectRecsFromCursor(e,function(e){o(e)},n)})}function querySoupRecsPromise(e){return new Promise(function(o,n){querySoupRecords(e,function(e){o(e.filter(function(e){return"object"==typeof e}))},function(e){n(e)})})}function querySoupRecordsWithQuerySpec(e,o,n,t){smartstore.querySoup(e,o,function(o){collectRecsFromCursor(o,function(o){console.log("Passing records back to callback for soup = "+e+" and rec count = "+o.length),n(o)},t)},t)}function smartQuerySoupRecordsWithQuerySpec(e,o,n){console.debug("smartQuerySoupRecordsWithQuerySpec",e),smartstore.runSmartQuery(e,function(e){collectRecsFromCursor(e,function(e){console.log("Passing records back to callback for soup with rec count = "+e.length),o(e)},n)},n)}function queryMobileTable(e,o,n,t,r){if(void 0===t&&void 0===r)return new Promise(function(t,r){var i=smartstore.buildExactQuerySpec(o,n,mobileCaddy.QUERY_BUFFER_SIZE_SL);querySoupRecordsWithQuerySpec(e,i,function(e){t(e)},function(e){r(e)})});var i=smartstore.buildExactQuerySpec(o,n,mobileCaddy.QUERY_BUFFER_SIZE_SL);querySoupRecordsWithQuerySpec(e,i,function(e){t(e)},r)}function queryMobileTableWithAnd(e,o,n,t,r,i,a){querySoupRecordsWithQuerySpec(e,smartstore.buildExactQuerySpec(o,n,mobileCaddy.QUERY_BUFFER_SIZE_SL),function(e){var o=[];e.forEach(function(e){e[t]==r&&o.push(e)}),i(o)},a)}function getDefnRowForTableName(e,o,n){getSysDataRowMapColHeading("Row Mapping PT","Mobile Table Name",function(t){queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Definition",t,e,function(n){1!=n.length&&mobileLogger.logMessageAndThrow("Should be exactly 1 table defn row for table: "+e+", but we got "+n.length),o(n[0])},n)},n)}function getTableDefnColumnValue(e,o){return new Promise(function(n,t){getDefnRowForTableName(e,function(e){getSysDataRowMapColHeading("Row Mapping PT",o,function(o){n(e[o])},function(e){t(e)})},function(e){t(e)})})}function setTableDefnColumnValue(e,o,n){return new Promise(function(t,r){getDefnRowForTableName(e,function(e){getSysDataRowMapColHeading("Row Mapping PT",o,function(o){e[o]=n,smartstore.upsertSoupEntries("syncLib_system_data",[e],function(){t()},function(e){r(e)})},function(e){r(e)})},function(e){r(e)})})}function getSysDataRowMapColHeading(e,o,n,t){queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001",e,"MC_Var_String_003",o,function(t){1!=t.length&&(t.forEach(function(e){console.log(e)}),mobileLogger.logMessageAndThrow("Must be exactly 1 Row Mapping Record for Sys Data Row Type = "+e+" and Sys Data Row Value = "+o+" found count = "+t.length)),n(t[0].MC_Var_String_004)},t)}function getSysDataRowMapColHeadings(e,o,n,t){querySoupRecordsWithQuerySpec("syncLib_system_data",smartstore.buildExactQuerySpec("MC_Var_String_001",e,mobileCaddy.QUERY_BUFFER_SIZE_SL),function(t){var r=[];o.forEach(function(o){var n=!1;if(t.forEach(function(e){if(e.MC_Var_String_003==o)return r.push(e.MC_Var_String_004),void(n=!0)}),!n)throw"No mapping found for type = "+e+" and value = "+o}),n(r)},t)}var NONE=0,ALPHA_ORDER=1,BUILD_ORDER=2;function listMobileTables(e,o,n){getSysDataRowMapColHeadings("Row Mapping PT",["Mobile Table Name","Build Order"],function(t){var r=t[0],i=t[1];queryMobileTable("syncLib_system_data","MC_Var_String_001","Platform Table Definition",function(n){var t=[];e==BUILD_ORDER?(n.sort(function(e,o){var n=0,t=parseInt(e[i]),r=parseInt(o[i]);return isNaN(t)||isNaN(r)||(n=t-r),n}),n.forEach(function(e){t.push(e[r])}),null!==o&&o(t)):(n.forEach(function(e){t.push(e[r])}),e==ALPHA_ORDER&&t.sort(),null!==o&&o(t))},n)},n)}var LIST=0,BUILD_OBJECT=1,FULL_LIST=2;function listMobileTableColumns(e,o,n,t){getSysDataRowMapColHeadings("Row Mapping TC",["Parent SOUP Name","Table Column Name","Mobile Column Type","Application Field CRUD","META isNillable","Platform Column Type","Device Value Type","Proxy Ref Field Name"],function(t){var r=t[0],i=t[1],a=t[2],u=t[3],c=t[4],s=t[5],l=t[6],f=t[7];queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Column",r,e,function(e){var t=[];e.forEach(function(e){o==LIST?t.push(e[i]):o==FULL_LIST?t.push({path:e[i],type:e[a],crud:e[u],nillable:e[c],platColType:e[s],appColType:e[l],proxyRefField:e[f]}):t.push({path:e[i],type:e[a]})}),n(t)},function(e){console.log("Error retrieving column names = "+e)})},t)}function cacheProxyFieldNames(e,o){o.forEach(function(o){o.path.includes("MC_Proxy_ID")&&localStorage.setItem("proxyField-"+e,o.path)})}function buildMobileTables(e,o){console.debug("About to buildMobileTables"),listMobileTables(BUILD_ORDER,function(n){var t=n.length;n.forEach(function(n){listMobileTableColumns(n,BUILD_OBJECT,function(r){console.debug("tableColumnObjectArray -> "+r),smartstore.registerSoup(n,r,function(){console.log("success on register soup "+n),setTableDefnColumnValue(n,"SOUP Built Date/Time",(new Date).getTime()).then(function(){return console.log("success on update of soup build date time"),cacheProxyFieldNames(n,r),getTableDefnColumnValue(n,"Snapshot Data Required")}).then(function(i){"Yes"==i?smartstore.registerSoup("SnapShot_"+n,r,function(){console.log("Success from build of SnapShot_"+n),setTableDefnColumnValue(n,"Snapshot SOUP Built Date/Time",(new Date).getTime()),0===--t&&e()},function(e){console.error("Fail on create of SnapShot_"+n+" "+e),o(e)}):0===--t&&e()}).catch(function(e){o(e)})},o)},function(e){console.error("Fail on create of table"+n+" "+e),o(e)})})},o)}function deleteRecordsFromSoup(e,o,n,t){if(console.log("In delete recs from soup with rec count = "+e.length),0!==e.length){var r=[];e.forEach(function(e){e&&e._soupEntryId&&r.push(e._soupEntryId)}),0!==r.length?smartstore.removeFromSoup(o,r,function(e){console.log("Deleted rec(s) - calling callback"),n(e)},t):n()}else n()}function insertRecords(e,o,n,t){console.log("in insert records"),console.log("mobile table name = "+e),console.log("records = "+JSON.stringify(o)),console.log("records size = "+o.length),smartstore.upsertSoupEntries(e,o,function(o){console.log("back from upsert soup with records = "+JSON.stringify(o));var r=(new Date).getTime();addProxyIds(e,o,r,function(o){console.log("back with proxy ids = "+JSON.stringify(o));var i=[];o.forEach(function(o){var n={Mobile_Table_Name:e,CRUD_Operation:"Insert",SOUP_Record_Id:o._soupEntryId,Id:o.Id,LastModifiedDateTime:r};i.push(n)}),smartstore.upsertSoupEntriesWithExternalId("recsToSync",i,"Id",n,t)},t)},t)}function addProxyIds(e,o,n,t,r){var i;getProxyFieldName(e).then(function(e){return i=e,appDataUtils.getCachedCurrentValueFromAppSoup("audId")}).then(function(a){o.forEach(function(o){var t="PROXY%"+e+"%"+n+"%"+o._soupEntryId+"%"+a;o.Id=t,o[i]=t}),smartstore.upsertSoupEntries(e,o,function(e){t(e)},r)}).catch(function(e){r(e)})}function fillOutRecords(e,o,n){var t=o.length,r=0;return new Promise(function(a,u){getProxyFieldName(e).then(function(c){o.forEach(function(s){queryMobileTable(e,n,s[n]).then(function(l){if(l.length>0){var f=l[0];for(var d in s)f[d]=s[d];o[i]=f,++r>=t&&a(o)}else"Id"==n&&s.Id.length>18?queryMobileTable(e,c,s.Id).then(function(e){if(e.length>0){var n=e[0];for(var c in s)"Id"!=c&&(n[c]=s[c]);o[i]=n,++r>=t&&a(o)}else u({status:101107})}):u({status:101107})}).catch(function(e){u(e)})})}).catch(function(e){u(e)})})}function updateRecordsWithExternalId(e,o,n,t,r){fillOutRecords(e,o,n).then(function(o){smartstore.upsertSoupEntriesWithExternalId(e,o,n,function(o){queryMobileTable("recsToSync","Mobile_Table_Name",e,function(n){var i=[];o.forEach(function(o){var t,r;if(n.forEach(function(e){e.Id!=o.Id||(t=e)}),void 0!==t)if(console.log("existingRecToSync",t),t.Current_Connection_Session&&void 0!==t.Current_Connection_Session)switch(t.CRUD_Operation){case"Insert":case"InsertUpdate":r="InsertUpdate";break;default:r="UpdateUpdate"}else r=t.CRUD_Operation;else r="Update";var a={Mobile_Table_Name:e,SOUP_Record_Id:o._soupEntryId,Id:o.Id,CRUD_Operation:r,LastModifiedDateTime:o.SystemModstamp};"InsertUpdate"!=r&&"UpdateUpdate"!=r||(a.Current_Connection_Session=t.Current_Connection_Session),i.push(a)}),smartstore.upsertSoupEntriesWithExternalId("recsToSync",i,"Id",t,r)},r)},r)}).catch(function(e){r(e)})}function getProxyFieldName(e){return new Promise(function(o,n){var t=localStorage.getItem("proxyField-"+e);t?o(t):(console.log("getProxyFieldName",e),listMobileTableColumns(e,LIST,function(n){var t=null;n.forEach(function(o){o.includes("MC_Proxy_ID")&&(t=o,localStorage.setItem("proxyField-"+e,o),console.log("GOT IT ",t))}),o(t)},function(e){console.error("listMobileTableColumns",JSON.stringify(e)),o(null)}))})}export const ALPHA=ALPHA_ORDER;export const BUILD=BUILD_ORDER;export const FULL=FULL_LIST;export{buildMobileTables,deleteSoup,deleteRecordsForExternalId,deleteRecordsFromSoup,insertRecords,updateRecordsWithExternalId,getProxyFieldName,listMobileTables,listMobileTableColumns,getSysDataRowMapColHeading,getSysDataRowMapColHeadings,getTableDefnColumnValue,setTableDefnColumnValue,queryMobileTable,queryMobileTableWithAnd,querySoupRecords,querySoupRecsPromise,querySoupRecordsWithQuerySpec,smartQuerySoupRecordsWithQuerySpec};