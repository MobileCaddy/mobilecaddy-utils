/* mobilecaddy-utils - v2.0.0 - Bundle Time: 2018-03-12 15:46:01 */
/* git info: "2018-03-08 11:35:36 +0000": 34e66b2d6ddf746b6814f8563e576e511cc89c8f (v2) */
/* Copyright 2018 MobileCaddy Ltd */

import*as smartStoreUtils from"./smartStoreUtils";import*as mobileCaddy from"./constants";var smartstore=cordova.require("com.salesforce.plugin.smartstore");function getCachedCurrentValueFromAppSoup(e){var t=localStorage.getItem("appSoup-"+e);return new Promise(function(u,r){t?u(t):getCurrentValueFromAppSoup(e).then(function(t){localStorage.setItem("appSoup-"+e,t),u(t)})})}function getCurrentValueFromAppSoup(e){return new Promise(function(t,u){var r=smartstore.buildExactQuerySpec("Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("appSoup",r,function(e){e[0]?t(e[0].CurrentValue):t(e[0])},function(e){u(e)})})}function updateValueInAppSoup(e,t,u){return new Promise(function(r,o){var p=smartstore.buildExactQuerySpec("Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("appSoup",p,function(e){e.length>0?(e[0][u]=t,smartstore.upsertSoupEntries("appSoup",e,function(e){r(e)},function(e){o(e)})):r()},function(e){o(e)})})}function updateNewValueInAppSoup(e,t){return updateValueInAppSoup(e,t,"NewValue")}function updateCurrentValueInAppSoup(e,t){return updateValueInAppSoup(e,t,"CurrentValue")}export{getCurrentValueFromAppSoup,getCachedCurrentValueFromAppSoup,updateNewValueInAppSoup,updateCurrentValueInAppSoup};