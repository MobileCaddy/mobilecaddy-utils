/* mobilecaddy-utils - v2.0.0 - Bundle Time: 2018-04-06 13:52:50 */
/* git info: "2018-04-06 13:49:20 +0100": 7877a293eee62da2c63a04332bb68746c8312d48 (v2) */
/* Copyright 2018 MobileCaddy Ltd */

"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createUpdateJson=exports._handleRefreshResponse=exports.heartBeat=exports.HEARTBEAT_REFRESHED_OK=exports.HEARTBEAT_NOT_DEVICE=exports.HEARTBEAT_NO_CONNECTION=exports.HEARTBEAT_FAILURE=exports.HEARTBEAT_EXCEPTION=exports.HEARTBEAT_OK=exports.m2pRecoveryUpdateMobileTable=exports.m2pUpdateMobileTable=exports.M2P_NO_RECS_TO_SYNC=exports.M2P_UPDATE_OK=exports.buildConnectionSession=exports.p2mRefreshTable=exports.P2M_REFRESH_OK=exports.addProxyIds=exports.genProxyId=exports.refreshToken=exports.CSINHEAD_SYNC_VSN=void 0;var _constants=require("./constants"),mobileCaddy=_interopRequireWildcard(_constants),_smartStoreUtils=require("./smartStoreUtils"),smartStoreUtils=_interopRequireWildcard(_smartStoreUtils),_appDataUtils=require("./appDataUtils"),appDataUtils=_interopRequireWildcard(_appDataUtils),_connSessUtils=require("./connSessUtils"),connSessUtils=_interopRequireWildcard(_connSessUtils),_vsnUtils=require("./vsnUtils"),vsnUtils=_interopRequireWildcard(_vsnUtils),_logger=require("./logger"),logger=_interopRequireWildcard(_logger),_geoLocation=require("./geoLocation"),geoLocation=_interopRequireWildcard(_geoLocation),_underscore=require("underscore"),_=_interopRequireWildcard(_underscore);function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t}var smartstore=cordova.require("com.salesforce.plugin.smartstore"),LOCAL_DEV=!!window.LOCAL_DEV,USE_FORCETK=!!window.USE_FORCETK,CSINHEAD_SYNC_VSN="006";function handleRefreshResponse(e){return new Promise(function(t,o){var n=function(e){o(e)},s={};console.log("json object date time = "+e.lastRefreshDatetime);var r={},a={},c=e.mt;null===c&&console.error("Mobile Table (tag 'mt') empty in p2mRefresh response: ",e);var i=smartstore.buildExactQuerySpec("Mobile_Table_Name",c,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",i,function(o){o.forEach(function(e){if("Insert"==e.CRUD_Operation||"InsertUpdate"==e.CRUD_Operation)r[e.Id]=1;else{if("Update"!=e.CRUD_Operation&&"UpdateUpdate"!=e.CRUD_Operation)return void logger.error("RTS contains record with non support CRUD Operation"+e);a[e.Id]=1}}),smartStoreUtils.getProxyFieldName(c).then(function(i){var u=[],l=[];(e.records.forEach(function(e){var t=!0;null!==e.recordData.MC_Proxy_ID__c&&r.hasOwnProperty(e.recordData[i])&&(t=!1),t&&a.hasOwnProperty(e.recordData.Id)&&(t=!1),t&&u.push(e.recordData)}),e.ds)&&e.ds.oq.concat(e.ds.sd.concat(e.ds.hd.concat(e.ds.sh))).forEach(function(e){a.hasOwnProperty(e)?console.log("We have a dirty local version, not deleting"):l.push({Id:e})});var d=smartstore.buildExactQuerySpec("Mobile_Table_Name",c,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",d,function(r){r.length==o.length?smartStoreUtils.deleteRecordsForExternalId(c,l,"Id",function(){smartstore.upsertSoupEntriesWithExternalId(c,u,"Id",function(){smartstore.soupExists("SnapShot_"+c,function(o){o?smartStoreUtils.deleteRecordsForExternalId("SnapShot_"+c,l,"Id",function(){smartstore.upsertSoupEntriesWithExternalId("SnapShot_"+c,u,"Id",function(){vsnUtils.checkForMigrateToInfo(e),setPlatAuthUrl(e.platAuthUrl),s.status=0,s.cs=e.cs,s.cp=e.cp,s.lastRefreshDatetime=e.lastRefreshDatetime,t(s)},n)},n):(vsnUtils.checkForMigrateToInfo(e),setPlatAuthUrl(e.platAuthUrl),s.status=0,s.lastRefreshDatetime=e.lastRefreshDatetime,s.cs=e.cs,s.cp=e.cp,t(s))},n)},n)},n):(s.status=0,s.mc_add_status=1,s.cs=e.cs,s.cp=e.cp,s.lastRefreshDatetime=e.lastRefreshDatetime,resolves(s))},n)})},n)})}function setPlatAuthUrl(e){console.log("setPlatAuthUrl",e),e||(e=""),appDataUtils.updateCurrentValueInAppSoup("platAuthUrl",e).catch(function(t){logger.error("setPlatAuthUrl",e,t)})}var P2M_REFRESH_OK=100500,SYNC_NOK=100402;function p2mRefreshTable(e,t,o,n,s,r,a,c){console.log("Refreshing table",e);var i,u,l,d,p=function(n,s){if(console.debug("respJson",n),console.debug("event",s),s.status){var r,i,l=new RegExp("\n","g");n=n.replace(l,"\\n"),l=new RegExp("\r","g"),n=n.replace(l,""),i=JSON.parse(n),console.log("Parse json done"),handleRefreshResponse(i).then(function(t){return r=t,console.log("handle refresh res = "+r.status),smartStoreUtils.setTableDefnColumnValue(e,"Last Refresh Date/Time",r.lastRefreshDatetime)}).then(function(){var t="P2M RE Records Processed";return"Connection_Session__mc"==e&&(t="P2M Conn_Sess Records Processed"),1==r.mc_add_status&&(t="P2M RE Abandoned"),d.connSessionRec.mobilecaddy1__Mobile_Process_Status__c=t,d.connSessionRec.Id=r.cs,connSessUtils.postProcessConnectionSession(d.connSessionRec)}).then(function(){return connSessUtils.handleUpdatedCS(i.csM2P)}).then(function(){console.log("success return from post process"),o&&u<CSINHEAD_SYNC_VSN?connSessUtils.maybeSyncConnSess(d.connSessionRec,function(){console.log("success return from maybeSyncConnSess"),i["Session Number"]&&i["Session Number"]<i["Total Sessions"]?(console.info("Page "+i["Session Number"]+" of "+i["Total Sessions"]+", going again."),p2mRefreshTable(e,t,o,i["Session Number"]+1,i["Total Sessions"],i.CsPId,a,c)):i.moreBatches?(console.info("moreBatches"),p2mRefreshTable(e,t,o,"newBatch",1,null,a,c)):(_.status=P2M_REFRESH_OK,a(_))},c):i["Session Number"]&&i["Session Number"]<i["Total Sessions"]?(console.info("Page "+i["Session Number"]+" of "+i["Total Sessions"]+", going again."),p2mRefreshTable(e,t,o,i["Session Number"]+1,i["Total Sessions"],i.CsPId,a,c)):i.moreBatches?(console.info("moreBatches"),p2mRefreshTable(e,t,o,"newBatch",1,null,a,c)):(console.log("No more pages or batches"),_.status=P2M_REFRESH_OK,a(_))}).catch(function(e){c(e)})}else"exception"===s.type&&logger.error("p2mRefresh",e,s.message,s.where),connSessUtils.cleanConnectionSessionVFEvent(s,d,function(e){_.status=SYNC_NOK,_.mc_add_status=e.mc_add_status,a(_)},c)},_={},S="newBatch"==n;S&&(n=1);try{smartStoreUtils.getTableDefnColumnValue(e,"Last Refresh Date/Time").then(function(e){(l=e)&&"null"!=l||(l=0),console.log("Using lastRefreshDatetime = "+l),console.debug("maxTableAge",t);var o=new Date;return l<o-t||n>1||S?appDataUtils.getCachedCurrentValueFromAppSoup("audId"):(console.log("Not refreshing table. it is too young"),_.status=100402,_.status=100497,a(_),Promise.reject(_))}).then(function(e){return i=e,appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion")}).then(function(e){return buildConnectionSession(u=e,"Sync - Refresh","P2M RE Process Called",n,s,r)}).then(function(e){if(d=e,!o){var t=JSON.parse(d.connSessJson);t.initialSync=!0,d.connSessJson=JSON.stringify(t)}if(S){var n=JSON.parse(d.connSessJson);n.firstBatch=!1,d.connSessJson=JSON.stringify(n)}return getCsUpdates(u,o)}).then(function(t){console.log("csUpdates",t),t&&(d.connSessJson=JSON.parse(d.connSessJson),d.connSessJson.csM2P=t,d.connSessJson=JSON.stringify(d.connSessJson)),console.log("connSessObject -> ",d),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/p2mRefreshTable001",contentType:"application/json",data:{audId:i,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:u,mobileTableName:e,deviceRefreshIds:[],lastRefreshDateTime:l,thirdPartyJson:"",connSessJson:d.connSessJson}},function(e,t){void 0===t&&((t={}).status="200"),p(e,t)},c):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".p2mRefreshTable",i,u,e,[],l,"",d.connSessJson,p,{buffer:!1,escape:!1,timeout:12e4})}).catch(function(e){100497==e.status?a(e):(logger.error(e),c(e))})}catch(e){logger.errorAndDispatch(e)}}function genProxyId(e,t,o){return new Promise(function(n,s){appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(s){n("PROXY%"+e+"%"+o+"%"+t+"%"+s)}).catch(function(e){s(e)})})}function addProxyIds(e,t,o,n,s){var r;smartStoreUtils.getProxyFieldName(e).then(function(e){return r=e,appDataUtils.getCachedCurrentValueFromAppSoup("audId")}).then(function(a){t.forEach(function(t){var n="PROXY%"+e+"%"+o+"%"+t._soupEntryId+"%"+a;t.Id=n,t[r]=n}),smartstore.upsertSoupEntries(e,t,function(e){n(e)},s)}).catch(function(e){s(e)})}function nullHandler(e,t,o,n){var s;if("Throw Exception"==n)throw logger.errorAndDispatch("nullHandler - NULL value found",e,t,o.Id),"NULL value found for field "+t+" in Mobile Table "+e+" with Id = "+o.Id;return"Return NULL"==n?s=null:"Return Empty String"==n&&(s=""),s}function getCsUpdates(e,t){return new Promise(function(o,n){if(console.log("syncRefreshVersion",e,CSINHEAD_SYNC_VSN),e<CSINHEAD_SYNC_VSN||!t)o();else{var s,r=[];smartStoreUtils.queryMobileTable("recsToSync","Mobile_Table_Name","Connection_Session__mc").then(function(e){return s=e,console.log("rtsRecs",s),s.length>0?smartStoreUtils.querySoupRecsPromise("Connection_Session__mc"):Promise.resolve([])}).then(function(e){console.log("csRecs",e),s.forEach(function(t){for(var o,n=0;n<e.length;++n)if(e[n].Id===t.Id){o=e[n];break}o&&r.push({Id:t.Id,t:valFromCsSessionType(o.mobilecaddy1__Session_Type__c),s:valFromCsStatus(o.mobilecaddy1__Mobile_Process_Status__c)})}),o(r)}).catch(function(e){logger.error(e),o(null)})}})}function valFromCsStatus(e){switch(e){case"P2M RE Records Processed":return 1;case"P2M Conn_Sess Records Processed":return 2;case"P2M RE Abandoned":return 3;case"P2M RE Exception/Timeout":return 4;case"P2M RE Heartbeat Exception/Timeout":return 5;case"P2M RE Failure":return 6;case"P2M RE Hearbeat Failure":return 7;case"M2P Conn_Sess Records Processed":return 8;case"M2P Records Processed":return 9;case"M2P UP Failed - RTS Cleared":return 10;case"M2P SC - Status Check Processed":return 11;case"M2P SC Failure":return 12;case"M2P SC Exception/Timeout":return 13;case"M2P SC Heartbeat Exception/Timeout":return 14;case"M2P SC Heartbeat Failure":return 15;case"M2P UP Received - Records Processed":return 16;default:return logger.error("Unkown CS status",e),0}}function valFromCsSessionType(e){switch(e){case"Sync - Refresh":return 1;case"Sync - Update":return 2;case"Status Check":return 3;default:return logger.error("Unkown Session_Type__c",e),0}}function createUpdateJson(e,t,o,n,s,r,a,c,i,u,l){var d={MobileTable:e,connSessProxyId:u,records:[]};a.forEach(function(a){for(var u,l=0;l<c.length;++l)if(c[l].Id===a.Id){u=c[l];break}if(u){var p={RTSRowNum:a._soupEntryId,RecordCRUD:mapCrudOpforM2P(a.CRUD_Operation),fields:[]};switch(p.RecordCRUD){case"I":case"T":p=createM2PInsertRecObj(p,e,t,o,n,s,r,u),d.records.push(p);break;case"D":case"U":case"Q":for(var _,S=0;S<i.length;++S)if(i[S].Id===a.Id){_=i[S];break}_?(p=createM2PUpdateRecObj(p,e,t,o,n,s,r,u,_),d.records.push(p)):logger.errorAndDispatch("createUpdateJson Missing snapShot",e,u.Id);break;default:logger.errorAndDispatch("createUpdateJson unknown CRUD",e,a.Id,a.CRUD_Operation)}}else logger.errorAndDispatch("createUpdateJson Missing primary",e,a.Id)}),l(JSON.stringify(d))}function mapCrudOpforM2P(e){switch(e){case"Insert":return"I";case"InsertDelete":return"T";case"Update":return"U";case"UpdatetDelete":return"Q";case"Delete":return"D";default:return null}}function createM2PInsertRecObj(e,t,o,n,s,r,a,c){for(var i in c){var u={name:i};if("mobilecaddy1__Error_Text__c"==i)u.value=JSON.stringify(c[i]),e.fields.push(u);else if("_soupEntryId"!=i&&"_soupLastModifiedDate"!=i){var l,d={};d[n]=i;var p=_.findWhere(o,d);if(null===c[i])fieldNullHandler=p[r],l=nullHandler(t,i,c,fieldNullHandler);else if(l=c[i],p)"M2P UP Unquoted"!=p[a]||"true"!=l&&"false"!=l||(l="true"==l);u.value=l,e.fields.push(u)}}return e}function createM2PUpdateRecObj(e,t,o,n,s,r,a,c,i){var u=!1;for(var l in c)if("_soupEntryId"!=l&&"_soupLastModifiedDate"!=l){var d={name:l};if(c[l]!=i[l]||"SystemModstamp"==l){var p,S;u=!0;var f={};f[n]=l;var m=_.findWhere(o,f);if(null===c[l])fieldNullHandler=m[r],p=nullHandler(t,l,c,fieldNullHandler),S=nullHandler(t,l,i,fieldNullHandler);else if(p=c[l],S=i[l],m){var E=m[a];"M2P UP Unquoted"!=E||"true"!=p&&"false"!=p||(p="true"==p),"M2P UP Unquoted"!=E||"true"!=S&&"false"!=S||(S="true"==S)}d.previousValue=S,d.value=p,e.fields.push(d)}}return u?(e.fields.push({name:"Id",previousValue:i.Id,value:i.Id}),e):[]}function markRecsToSyncWithProxy(e,t,o,n){e.forEach(function(e){e.Current_Connection_Session=t}),smartstore.upsertSoupEntriesWithExternalId("recsToSync",e,"Id",o,n)}function createInsertSnapshotRecords(e,t,o,n,s){var r=[];t.forEach(function(e){var t={};o.forEach(function(o){if(e.Id==o.Id&&"Insert"==e.CRUD_Operation)for(var n in o)"_soupEntryId"!=n&&"_soupLastModifiedDate"!=n&&(t[n]=o[n])}),_.isEmpty(t)||r.push(t)}),0===r.length?n():smartStoreUtils.getProxyFieldName(e).then(function(t){smartstore.upsertSoupEntriesWithExternalId("SnapShot_"+e,r,t,n,s)})}function buildConnectionSession(e,t,o,n,s,r){return new Promise(function(e,a){var c={};geoLocation.getLocation(function(i){var u={mobilecaddy1__Session_Type__c:t,mobilecaddy1__Mobile_Process_Status__c:o,SystemModstamp:(new Date).getTime()},l=i.ErrorNumber;0!==l?u.mobilecaddy1__Session_Created_Location_Error__c=i.Error:(u.Session_Created_Location__Longitude__s=i.Latitude,u.Session_Created_Location__Latitude__s=i.Longitude),insertRecWithProxyId("Connection_Session__mc",u,function(t){var o=new Date,a={"Sync Session Proxy ID":null,"Total Sessions":s,"Session Number":n,"Device Call Date/Time":o.getTime(),"Connection Session Proxy ID":t.proxyId};r&&(a.CsPId=r),0!==l?a.ErrorNumber=l:(a["Location Long"]=i.Longitude,a["Location Lat"]=i.Latitude),c.status=0,c.connSessionRec=t.insertedRecord,c.connSessProxyId=t.proxyId;var u={version:"NULL"};window.device&&(u=window.device),appDataUtils.getCurrentValueFromAppSoup("containerVersion").then(function(t){a.containerVsn=t,a.OSVsn=u.version,c.connSessJson=JSON.stringify(a),e(c)}).catch(function(t){logger.error("buildConnectionSession - Could not get containerVsn",t),a.OSVsn=u.version,c.connSessJson=JSON.stringify(a),e(c)})},function(e){a(e)})},function(e){a(e)})})}function m2pRecoveryUpdateMobileTable(e){return new Promise(function(t,o){var n={},s=function(e){t(e)},r=function(e){o(e)},a=smartstore.buildExactQuerySpec("Mobile_Table_Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",a,function(t){if(0!==t.length){console.debug("recsToSyncRecords",JSON.stringify(t));var o=!1;"Connection_Session__mc"!=e&&t.length>3e4&&(o=!0),console.log("moreToSync: "+o);var a=[];a=o?(a=_.sortBy(t,"_soupLastModifiedDate")).slice(0,3e4):t,console.debug("recsToSyncRecords2",JSON.stringify(a)),smartStoreUtils.querySoupRecords(e,function(t){smartStoreUtils.querySoupRecords("SnapShot_"+e,function(c){smartStoreUtils.getSysDataRowMapColHeadings("Row Mapping TC",["Parent SOUP Name","Table Column Name","M2P Update Converter DEVICE","M2P Update NULL Handler DEVICE","M2P Update Formatter DEVICE"],function(i){var u=i[0],l=i[1],d=i[2],p=i[3],S=i[4];smartStoreUtils.queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Column",u,e,function(i){var u=[];if(_.each(a,function(e){var o;o=e.Id,_.find(t,function(e){return e.Id==o})&&u.push(e)}),_.isEmpty(u))return console.debug("Nothing in checkedRecsToSync."),void smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){n.status=M2P_UPDATE_OK,n.mc_add_status=M2P_NO_RECS_TO_SYNC,s(n)}).catch(function(e){logger.error(e)});createUpdateJson(e,i,l,d,p,S,u,t,c,"",function(c){var i;appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(e){return i=e,appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion")}).then(function(u){createInsertSnapshotRecords(e,a,t,function(){console.log("moreToSync: "+o);var t=function(e,t){console.debug("result: "+e),console.debug("event: "+t),n.result=e,n.event=t,s(n)};c=c.replace(/: undefined/g,': "undefined"'),console.debug("jsonString -> "+c),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/m2pUpdateTable001",contentType:"application/json",data:{audId:i,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:u,mobileTableName:e,jsonRecords:c}},function(e,o){void 0===o&&((o={}).status="200"),t(e,o)},r):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".m2pUpdateTable",i,u,e,c,JSON.stringify({"Session Number":1,"Location Long":10,"Location Lat":10,"Total Sessions":1,"Device Call Date/Time":(new Date).getTime(),"Connection Session Proxy ID":"1",ErrorNumber:2}),t,{buffer:!1,escape:!1,timeout:3e4})},r)}).catch(function(e){r(e)})},r)},r)},r)},r)},r)}else smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){n.status=M2P_UPDATE_OK,n.mc_add_status=M2P_NO_RECS_TO_SYNC,s(n)}).catch(function(e){logger.log("No recs to sync")})},r)})}var M2P_UPDATE_OK=100300,M2P_NO_RECS_TO_SYNC=100310;function m2pUpdateMobileTable(e,t,o,n){var s,r,a={};console.debug("In m2pUpdateMobileTable call",e,t);try{appDataUtils.getCachedCurrentValueFromAppSoup("syncRefreshVersion").then(function(e){return buildConnectionSession(r=e,"Sync - Update","M2P Process Called",1,1,null)}).then(function(e){return s=e,console.log("proxy id = "+s.connSessProxyId),getCsUpdates(r,!0)}).then(function(c){console.log("m2p csUpdates",c),c&&(s.connSessJson=JSON.parse(s.connSessJson),s.connSessJson.csM2P=c,s.connSessJson=JSON.stringify(s.connSessJson)),console.log("connSessObject -> ",s);var i=smartstore.buildExactQuerySpec("Mobile_Table_Name",e,mobileCaddy.QUERY_BUFFER_SIZE);smartStoreUtils.querySoupRecordsWithQuerySpec("recsToSync",i,function(c){if(0!==c.length){console.debug("recsToSyncRecords",JSON.stringify(c));var i=!1;"Connection_Session__mc"!=e&&c.length>t&&(i=!0),console.log("moreToSync",i);var u=[];u=i?(u=_.sortBy(c,"_soupLastModifiedDate")).slice(0,t):c,console.debug("recsToSyncRecords2",JSON.stringify(u)),markRecsToSyncWithProxy(u,s.connSessProxyId,function(t){smartStoreUtils.querySoupRecords(e,function(c){smartStoreUtils.querySoupRecords("SnapShot_"+e,function(u){smartStoreUtils.getSysDataRowMapColHeadings("Row Mapping TC",["Parent SOUP Name","Table Column Name","M2P Update Converter DEVICE","M2P Update NULL Handler DEVICE","M2P Update Formatter DEVICE"],function(l){var d=l[0],p=l[1],_=l[2],S=l[3],f=l[4];smartStoreUtils.queryMobileTableWithAnd("syncLib_system_data","MC_Var_String_001","Platform Table Column",d,e,function(l){createUpdateJson(e,l,p,_,S,f,t,c,u,s.connSessProxyId,function(u){var l;appDataUtils.getCachedCurrentValueFromAppSoup("audId").then(function(d){l=d,createInsertSnapshotRecords(e,t,c,function(){console.log("moreToSync",i);var t=function(t,c){var l;(console.debug("result",t),console.debug("event",c),c.status)?(t=t.replace(/,}/g,"}"),console.log("Parse json processM2PUpdateResponse"),l=JSON.parse(t),console.log("Parse json processM2PUpdateResponse done"),connSessUtils.processM2PUpdateResponse(l,u,function(t){console.debug("responseObject",JSON.stringify(t)),s.connSessionRec.mobilecaddy1__Mobile_Process_Status__c="Connection_Session__mc"==e?"M2P Conn_Sess Records Processed":"M2P Records Processed",s.connSessionRec.Id=t.csId,connSessUtils.postProcessConnectionSession(s.connSessionRec).then(function(){return connSessUtils.handleUpdatedCS(l.csM2P)}).then(function(){console.log("success return from post process"),console.log("success return from post process"),console.log("moreToSync",i),i?(a.status=M2P_UPDATE_OK,a.mc_add_status="more-to-sync",o(a)):r<CSINHEAD_SYNC_VSN?connSessUtils.maybeSyncConnSess(s.connSessionRec,function(){console.log("success return from maybeSyncConnSess"),a.status=M2P_UPDATE_OK,o(a)},n):(a.status=M2P_UPDATE_OK,o(a))}).catch(function(e){n(e)})},n)):"exception"===c.type?(a.status=M2P_UPDATE_OK,a.mc_add_status=HEARTBEAT_EXCEPTION,o(a),logger.error("m2pUpdate",e,c.message,c.where)):(a.status=M2P_UPDATE_OK,a.mc_add_status=HEARTBEAT_FAILURE,o(a),logger.error("m2pUpdate",e,c.message,c.where))};u=u.replace(/: undefined/g,': "undefined"'),console.debug("jsonString -> "+u),!0===USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/m2pUpdateTable001",contentType:"application/json",data:{audId:l,startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN,syncRefreshDataVersion:r,mobileTableName:e,jsonRecords:u,connSessJson:s.connSessJson}},function(e,o){void 0===o&&((o={}).status="200"),t(e,o)},n):Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".m2pUpdateTable",l,r,e,u,s.connSessJson,t,{buffer:!1,escape:!1,timeout:3e4})},n)}).catch(function(e){n(e)})},n)},n)},n)},n)},n)},n)}else smartStoreUtils.setTableDefnColumnValue(e,"Last Sync Date/Time",(new Date).getTime()).then(function(){a.status=M2P_UPDATE_OK,a.mc_add_status=M2P_NO_RECS_TO_SYNC,o(a)}).catch(function(e){n(e)})},n)},n)}catch(e){logger.errorAndDispatch(e)}}function insertRecWithProxyId(e,t,o,n){var s={},r=new Date;smartStoreUtils.getProxyFieldName(e).then(function(a){smartstore.upsertSoupEntries(e,[t],function(t){var c=t[0];genProxyId(e,c._soupEntryId,r.getTime()).then(function(t){c.Id=t,c[a]=t,smartstore.upsertSoupEntries(e,[c],function(e){s.status=0,s.proxyId=t,s.insertedRecord=e[0],o(s)},n)}).catch(function(e){n(e)})},n)}).catch(function(e){n(e)})}var HEARTBEAT_OK=100100,HEARTBEAT_EXCEPTION=100101,HEARTBEAT_FAILURE=100102,HEARTBEAT_NO_CONNECTION=100103,HEARTBEAT_NOT_DEVICE=100104,HEARTBEAT_REFRESHED_OK=100105;function heartBeat(e,t){var o={},n=navigator.appVersion.includes("Electron");n||navigator&&navigator.connection&&"undefined"!=typeof Connection?(console.log("Connection details"),n||navigator.connection.type!=Connection.NONE?"undefined"==typeof Visualforce?(logger.log("Visualforce not currently defined"),resetStartPageAndScript().then(function(o){sendHeartBeat(e,t)}).catch(function(t){logger.errorAndDispatch("Startpage Load Error: "+window.location.pathname,t),o.status=HEARTBEAT_FAILURE,e(o)})):sendHeartBeat(e,t):(o.status=HEARTBEAT_NO_CONNECTION,e(o))):(localStorage.connection?o.status=localStorage.connection:o.status=HEARTBEAT_NOT_DEVICE,e(o))}function resetStartPageAndScript(){return new Promise(function(e,t){var o=window.location.pathname,n=new XMLHttpRequest;n.open("GET",o,!0),n.send(),n.onreadystatechange=function(){if(n.readyState==XMLHttpRequest.DONE&&200==n.status){console.log(n.response),logger.log("Startpage re-fetched",o);var e=new RegExp('"(\\S+VFRemote.js)"').exec(n.response);if(e&&e[0]){var s=e[1];console.log("vfRemoteSrc",s),getScript(s,function(){logger.log("remote script fetched",s),logger.log("set up Visualforce ref")})}else t("Could not find VFRemote.js mention in "+o)}else n.readyState==XMLHttpRequest.DONE&&t(n.status)}})}function getScript(e,t){var o=document.createElement("script"),n=document.getElementsByTagName("script")[0];o.async=1,o.onload=o.onreadystatechange=function(e,n){(n||!o.readyState||/loaded|complete/.test(o.readyState))&&(o.onload=o.onreadystatechange=null,o=void 0,n||t&&t())},o.src=e,n.parentNode.insertBefore(o,n)}function sendHeartBeat(e,t){var o={};Visualforce.remoting.Manager.invokeAction("mobilecaddy1."+mobileCaddy.START_PAGE_CONTROLLER+".heartBeat",function(t,n){n.status?(o.status=HEARTBEAT_OK,e(o)):"exception"===n.type?refreshToken(function(t){console.log("refresh token refreshed in heartbeat"),o.status=HEARTBEAT_REFRESHED_OK,e(o)},function(t){o.status=HEARTBEAT_EXCEPTION,e(o)}):(console.debug("other"),o.status=HEARTBEAT_FAILURE,e(o))},{escape:!1,timeout:3e4})}function refreshToken(e,t){smartStoreUtils.querySoupRecords("appSoup",function(o){var n={};o.forEach(function(e){n[e.Name]=e.CurrentValue}),refreshTokenRequest(n,e,t)},function(e){t(e)})}function refreshTokenRequest(e,t,o){var n="grant_type=refresh_token&identity_url="+e.identityUrl+"&client_id="+e.clientId+"&refresh_token="+e.refreshToken+"&orgId="+e.orgId+"&audId="+e.audId+"&userId="+e.userId;console.log("data: "+n);var s=new XMLHttpRequest;s.open("POST","https://mobilecaddy.secure.force.com/apex/ProxyToken",!0),s.setRequestHeader("Content-type","application/x-www-form-urlencoded"),s.send(n),s.onreadystatechange=function(){if(s.readyState==XMLHttpRequest.DONE&&200==s.status){var e=JSON.parse(s.response);console.log("Changing vf access token from "+Visualforce.remoting.oauthAccessToken+" to "+e.access_token),Visualforce.remoting.oauthAccessToken=e.access_token,Visualforce.remoting.last.refresh(function(){appDataUtils.updateCurrentValueInAppSoup("accessToken",e.access_token).then(function(){console.log("Updated accessToken in appSoup"),t(e.access_token)}).catch(function(e){o(e)})},function(e){logger.error("in VF last refresh error"),o(e)})}else s.readyState==XMLHttpRequest.DONE&&logger.error("refreshTokenRequest error.",s.status)}}function _handleRefreshResponse(e){return new Promise(function(t,o){handleRefreshResponse(e,function(){t()},function(e){o(e)})})}exports.CSINHEAD_SYNC_VSN=CSINHEAD_SYNC_VSN,exports.refreshToken=refreshToken,exports.genProxyId=genProxyId,exports.addProxyIds=addProxyIds,exports.P2M_REFRESH_OK=P2M_REFRESH_OK,exports.p2mRefreshTable=p2mRefreshTable,exports.buildConnectionSession=buildConnectionSession,exports.M2P_UPDATE_OK=M2P_UPDATE_OK,exports.M2P_NO_RECS_TO_SYNC=M2P_NO_RECS_TO_SYNC,exports.m2pUpdateMobileTable=m2pUpdateMobileTable,exports.m2pRecoveryUpdateMobileTable=m2pRecoveryUpdateMobileTable,exports.HEARTBEAT_OK=HEARTBEAT_OK,exports.HEARTBEAT_EXCEPTION=HEARTBEAT_EXCEPTION,exports.HEARTBEAT_FAILURE=HEARTBEAT_FAILURE,exports.HEARTBEAT_NO_CONNECTION=HEARTBEAT_NO_CONNECTION,exports.HEARTBEAT_NOT_DEVICE=HEARTBEAT_NOT_DEVICE,exports.HEARTBEAT_REFRESHED_OK=HEARTBEAT_REFRESHED_OK,exports.heartBeat=heartBeat,exports._handleRefreshResponse=_handleRefreshResponse,exports.createUpdateJson=createUpdateJson;